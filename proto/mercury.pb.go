// Code generated by protoc-gen-go.
// source: mercury.proto
// DO NOT EDIT!

package Spotify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MercuryReply_CachePolicy int32

const (
	MercuryReply_CACHE_NO      MercuryReply_CachePolicy = 1
	MercuryReply_CACHE_PRIVATE MercuryReply_CachePolicy = 2
	MercuryReply_CACHE_PUBLIC  MercuryReply_CachePolicy = 3
)

var MercuryReply_CachePolicy_name = map[int32]string{
	1: "CACHE_NO",
	2: "CACHE_PRIVATE",
	3: "CACHE_PUBLIC",
}
var MercuryReply_CachePolicy_value = map[string]int32{
	"CACHE_NO":      1,
	"CACHE_PRIVATE": 2,
	"CACHE_PUBLIC":  3,
}

func (x MercuryReply_CachePolicy) Enum() *MercuryReply_CachePolicy {
	p := new(MercuryReply_CachePolicy)
	*p = x
	return p
}
func (x MercuryReply_CachePolicy) String() string {
	return proto.EnumName(MercuryReply_CachePolicy_name, int32(x))
}
func (x *MercuryReply_CachePolicy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MercuryReply_CachePolicy_value, data, "MercuryReply_CachePolicy")
	if err != nil {
		return err
	}
	*x = MercuryReply_CachePolicy(value)
	return nil
}
func (MercuryReply_CachePolicy) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{3, 0} }

type MercuryMultiGetRequest struct {
	Request          []*MercuryRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *MercuryMultiGetRequest) Reset()                    { *m = MercuryMultiGetRequest{} }
func (m *MercuryMultiGetRequest) String() string            { return proto.CompactTextString(m) }
func (*MercuryMultiGetRequest) ProtoMessage()               {}
func (*MercuryMultiGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *MercuryMultiGetRequest) GetRequest() []*MercuryRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type MercuryMultiGetReply struct {
	Reply            []*MercuryReply `protobuf:"bytes,1,rep,name=reply" json:"reply,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *MercuryMultiGetReply) Reset()                    { *m = MercuryMultiGetReply{} }
func (m *MercuryMultiGetReply) String() string            { return proto.CompactTextString(m) }
func (*MercuryMultiGetReply) ProtoMessage()               {}
func (*MercuryMultiGetReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *MercuryMultiGetReply) GetReply() []*MercuryReply {
	if m != nil {
		return m.Reply
	}
	return nil
}

type MercuryRequest struct {
	Uri              *string `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	ContentType      *string `protobuf:"bytes,2,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	Body             []byte  `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Etag             []byte  `protobuf:"bytes,4,opt,name=etag" json:"etag,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MercuryRequest) Reset()                    { *m = MercuryRequest{} }
func (m *MercuryRequest) String() string            { return proto.CompactTextString(m) }
func (*MercuryRequest) ProtoMessage()               {}
func (*MercuryRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *MercuryRequest) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *MercuryRequest) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *MercuryRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *MercuryRequest) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

type MercuryReply struct {
	StatusCode       *int32                    `protobuf:"zigzag32,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	StatusMessage    *string                   `protobuf:"bytes,2,opt,name=status_message,json=statusMessage" json:"status_message,omitempty"`
	CachePolicy      *MercuryReply_CachePolicy `protobuf:"varint,3,opt,name=cache_policy,json=cachePolicy,enum=Spotify.MercuryReply_CachePolicy" json:"cache_policy,omitempty"`
	Ttl              *int32                    `protobuf:"zigzag32,4,opt,name=ttl" json:"ttl,omitempty"`
	Etag             []byte                    `protobuf:"bytes,5,opt,name=etag" json:"etag,omitempty"`
	ContentType      *string                   `protobuf:"bytes,6,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	Body             []byte                    `protobuf:"bytes,7,opt,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *MercuryReply) Reset()                    { *m = MercuryReply{} }
func (m *MercuryReply) String() string            { return proto.CompactTextString(m) }
func (*MercuryReply) ProtoMessage()               {}
func (*MercuryReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *MercuryReply) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func (m *MercuryReply) GetStatusMessage() string {
	if m != nil && m.StatusMessage != nil {
		return *m.StatusMessage
	}
	return ""
}

func (m *MercuryReply) GetCachePolicy() MercuryReply_CachePolicy {
	if m != nil && m.CachePolicy != nil {
		return *m.CachePolicy
	}
	return MercuryReply_CACHE_NO
}

func (m *MercuryReply) GetTtl() int32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *MercuryReply) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *MercuryReply) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *MercuryReply) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Header struct {
	Uri              *string      `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	ContentType      *string      `protobuf:"bytes,2,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	Method           *string      `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	StatusCode       *int32       `protobuf:"zigzag32,4,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	UserFields       []*UserField `protobuf:"bytes,6,rep,name=user_fields,json=userFields" json:"user_fields,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *Header) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Header) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *Header) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *Header) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func (m *Header) GetUserFields() []*UserField {
	if m != nil {
		return m.UserFields
	}
	return nil
}

type UserField struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserField) Reset()                    { *m = UserField{} }
func (m *UserField) String() string            { return proto.CompactTextString(m) }
func (*UserField) ProtoMessage()               {}
func (*UserField) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *UserField) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *UserField) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*MercuryMultiGetRequest)(nil), "Spotify.MercuryMultiGetRequest")
	proto.RegisterType((*MercuryMultiGetReply)(nil), "Spotify.MercuryMultiGetReply")
	proto.RegisterType((*MercuryRequest)(nil), "Spotify.MercuryRequest")
	proto.RegisterType((*MercuryReply)(nil), "Spotify.MercuryReply")
	proto.RegisterType((*Header)(nil), "Spotify.Header")
	proto.RegisterType((*UserField)(nil), "Spotify.UserField")
	proto.RegisterEnum("Spotify.MercuryReply_CachePolicy", MercuryReply_CachePolicy_name, MercuryReply_CachePolicy_value)
}

func init() { proto.RegisterFile("mercury.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x52, 0xdb, 0x6e, 0xd4, 0x30,
	0x10, 0xd5, 0xde, 0xd9, 0x49, 0x76, 0xb5, 0x6b, 0x95, 0x92, 0x37, 0x68, 0x24, 0xa4, 0x4a, 0x48,
	0x91, 0x68, 0x7f, 0x80, 0x12, 0x0a, 0xad, 0x60, 0xa1, 0x32, 0x2d, 0xaf, 0x51, 0x48, 0xa6, 0x6d,
	0x44, 0x52, 0x07, 0x5f, 0x90, 0xf2, 0x4d, 0x7c, 0x02, 0x3f, 0x87, 0x1d, 0x3b, 0xbb, 0x85, 0xc0,
	0x4b, 0xdf, 0xce, 0x9c, 0x33, 0x1e, 0x9f, 0x33, 0x36, 0x2c, 0x2a, 0xe4, 0x99, 0xe2, 0x4d, 0x54,
	0x73, 0x26, 0x19, 0x99, 0x7d, 0xae, 0x99, 0x2c, 0xae, 0x9b, 0xf0, 0x3d, 0xec, 0x6f, 0xac, 0xb2,
	0x51, 0xa5, 0x2c, 0xde, 0xa1, 0xa4, 0xf8, 0x5d, 0xa1, 0x90, 0xe4, 0x25, 0xcc, 0xb8, 0x85, 0xc1,
	0xe0, 0xd9, 0xe8, 0xd0, 0x3b, 0x7a, 0x12, 0xb9, 0x43, 0x91, 0x3b, 0xe1, 0x3a, 0x69, 0xd7, 0x17,
	0xc6, 0xb0, 0xd7, 0x1b, 0x56, 0x97, 0x0d, 0x79, 0x01, 0x13, 0x6e, 0x80, 0x1b, 0xf4, 0xb8, 0x3f,
	0x48, 0x8b, 0xd4, 0xf6, 0x84, 0x15, 0x2c, 0xff, 0x9c, 0x4f, 0x56, 0x30, 0x52, 0xbc, 0xd0, 0x87,
	0x07, 0x87, 0x73, 0x6a, 0x20, 0x39, 0x00, 0x3f, 0x63, 0x77, 0x12, 0xef, 0x64, 0x22, 0x9b, 0x1a,
	0x83, 0x61, 0x2b, 0x79, 0x8e, 0xbb, 0xd4, 0x14, 0x21, 0x30, 0xfe, 0xca, 0xf2, 0x26, 0x18, 0x69,
	0xc9, 0xa7, 0x2d, 0x36, 0x1c, 0xca, 0xf4, 0x26, 0x18, 0x5b, 0xce, 0xe0, 0xf0, 0xd7, 0x10, 0xfc,
	0xfb, 0x36, 0xc8, 0x53, 0xf0, 0x84, 0x4c, 0xa5, 0x12, 0x49, 0xc6, 0x72, 0x6c, 0x6f, 0x5d, 0x53,
	0xb0, 0x54, 0xac, 0x19, 0xf2, 0x1c, 0x96, 0xae, 0xa1, 0x42, 0x21, 0xd2, 0x9b, 0xee, 0xfa, 0x85,
	0x65, 0x37, 0x96, 0x24, 0x6f, 0xb4, 0xc7, 0x34, 0xbb, 0xc5, 0xa4, 0x66, 0x65, 0x91, 0x59, 0x23,
	0xcb, 0xa3, 0x83, 0x7f, 0x66, 0x8f, 0x62, 0xd3, 0x79, 0xd1, 0x36, 0xea, 0x18, 0xbb, 0xc2, 0x64,
	0x97, 0xb2, 0x6c, 0x1d, 0xaf, 0xa9, 0x81, 0xdb, 0x10, 0x93, 0x5d, 0x88, 0xde, 0x3e, 0xa6, 0xff,
	0xdf, 0xc7, 0x6c, 0xb7, 0x8f, 0xf0, 0x15, 0x78, 0xf7, 0x2e, 0x26, 0x3e, 0x3c, 0x8a, 0x4f, 0xe2,
	0xb3, 0xd3, 0xe4, 0xe3, 0xa7, 0xd5, 0x80, 0xac, 0x61, 0x61, 0xab, 0x0b, 0x7a, 0xfe, 0xe5, 0xe4,
	0xf2, 0x74, 0x35, 0xd4, 0x66, 0x7c, 0x47, 0x5d, 0xbd, 0xfe, 0x70, 0x1e, 0xaf, 0x46, 0xe1, 0xcf,
	0x01, 0x4c, 0xcf, 0x30, 0xcd, 0x91, 0x3f, 0xec, 0x95, 0xf6, 0x61, 0x5a, 0xa1, 0xbc, 0x65, 0x79,
	0xbb, 0x9e, 0x39, 0x75, 0xd5, 0xdf, 0x8f, 0x30, 0xee, 0x3d, 0xc2, 0x31, 0x78, 0x4a, 0x20, 0x4f,
	0xae, 0x0b, 0x2c, 0x73, 0xa1, 0x03, 0x9b, 0x8f, 0x45, 0xb6, 0xcb, 0xbd, 0xd2, 0xda, 0x5b, 0x23,
	0x51, 0x50, 0x1d, 0x14, 0xe1, 0x31, 0xcc, 0xb7, 0x82, 0xf1, 0xfb, 0x0d, 0x9b, 0xce, 0xaf, 0x86,
	0x64, 0x0f, 0x26, 0x3f, 0xd2, 0x52, 0x59, 0xa3, 0x3e, 0xb5, 0xc5, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xeb, 0x4a, 0xca, 0xa1, 0x3a, 0x03, 0x00, 0x00,
}
