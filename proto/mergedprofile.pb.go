// Code generated by protoc-gen-go.
// source: mergedprofile.proto
// DO NOT EDIT!

package Spotify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MergedProfileRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MergedProfileRequest) Reset()                    { *m = MergedProfileRequest{} }
func (m *MergedProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*MergedProfileRequest) ProtoMessage()               {}
func (*MergedProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type MergedProfileReply struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Artistid         *string `protobuf:"bytes,2,opt,name=artistid" json:"artistid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MergedProfileReply) Reset()                    { *m = MergedProfileReply{} }
func (m *MergedProfileReply) String() string            { return proto.CompactTextString(m) }
func (*MergedProfileReply) ProtoMessage()               {}
func (*MergedProfileReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *MergedProfileReply) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *MergedProfileReply) GetArtistid() string {
	if m != nil && m.Artistid != nil {
		return *m.Artistid
	}
	return ""
}

func init() {
	proto.RegisterType((*MergedProfileRequest)(nil), "Spotify.MergedProfileRequest")
	proto.RegisterType((*MergedProfileReply)(nil), "Spotify.MergedProfileReply")
}

var fileDescriptor5 = []byte{
	// 110 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xce, 0x4d, 0x2d, 0x4a,
	0x4f, 0x4d, 0x29, 0x28, 0xca, 0x4f, 0xcb, 0xcc, 0x49, 0xd5, 0x03, 0xd2, 0x25, 0xf9, 0x42, 0xec,
	0xc1, 0x05, 0xf9, 0x25, 0x99, 0x69, 0x95, 0x4a, 0x62, 0x5c, 0x22, 0xbe, 0x60, 0xf9, 0x00, 0x88,
	0x7c, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x92, 0x05, 0x97, 0x10, 0x9a, 0x78, 0x41, 0x4e,
	0xa5, 0x90, 0x00, 0x17, 0x47, 0x69, 0x71, 0x6a, 0x51, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x27, 0x48, 0x24, 0xb1, 0xa8, 0x24, 0xb3, 0xb8, 0x24, 0x33, 0x45, 0x82, 0x09, 0x24,
	0x02, 0x08, 0x00, 0x00, 0xff, 0xff, 0xdc, 0xd3, 0x86, 0x3f, 0x70, 0x00, 0x00, 0x00,
}
