// Code generated by protoc-gen-go.
// source: pubsub.proto
// DO NOT EDIT!

package Spotify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Subscription struct {
	Uri              *string `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Expiry           *int32  `protobuf:"varint,2,opt,name=expiry" json:"expiry,omitempty"`
	StatusCode       *int32  `protobuf:"varint,3,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Subscription) Reset()                    { *m = Subscription{} }
func (m *Subscription) String() string            { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()               {}
func (*Subscription) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *Subscription) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Subscription) GetExpiry() int32 {
	if m != nil && m.Expiry != nil {
		return *m.Expiry
	}
	return 0
}

func (m *Subscription) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func init() {
	proto.RegisterType((*Subscription)(nil), "Spotify.Subscription")
}

func init() { proto.RegisterFile("pubsub.proto", fileDescriptor14) }

var fileDescriptor14 = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x28, 0x4d, 0x2a,
	0x2e, 0x4d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x0f, 0x2e, 0xc8, 0x2f, 0xc9, 0x4c,
	0xab, 0x54, 0x8a, 0xe4, 0xe2, 0x09, 0x06, 0x4a, 0x24, 0x17, 0x65, 0x16, 0x94, 0x64, 0xe6, 0xe7,
	0x09, 0x09, 0x70, 0x31, 0x97, 0x16, 0x65, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98,
	0x42, 0x62, 0x5c, 0x6c, 0xa9, 0x15, 0x05, 0x99, 0x45, 0x95, 0x12, 0x4c, 0x40, 0x41, 0xd6, 0x20,
	0x28, 0x4f, 0x48, 0x9e, 0x8b, 0xbb, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x38, 0x3e, 0x39, 0x3f, 0x25,
	0x55, 0x82, 0x19, 0x2c, 0xc9, 0x05, 0x11, 0x72, 0x06, 0x8a, 0x00, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x03, 0x6d, 0x74, 0x33, 0x72, 0x00, 0x00, 0x00,
}
