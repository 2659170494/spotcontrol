// Code generated by protoc-gen-go.
// source: spirc.proto
// DO NOT EDIT!

package Spotify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MessageType int32

const (
	MessageType_kMessageTypeHello      MessageType = 1
	MessageType_kMessageTypeGoodbye    MessageType = 2
	MessageType_kMessageTypeProbe      MessageType = 3
	MessageType_kMessageTypeNotify     MessageType = 10
	MessageType_kMessageTypeLoad       MessageType = 20
	MessageType_kMessageTypePlay       MessageType = 21
	MessageType_kMessageTypePause      MessageType = 22
	MessageType_kMessageTypePlayPause  MessageType = 23
	MessageType_kMessageTypeSeek       MessageType = 24
	MessageType_kMessageTypePrev       MessageType = 25
	MessageType_kMessageTypeNext       MessageType = 26
	MessageType_kMessageTypeVolume     MessageType = 27
	MessageType_kMessageTypeShuffle    MessageType = 28
	MessageType_kMessageTypeRepeat     MessageType = 29
	MessageType_kMessageTypeVolumeDown MessageType = 31
	MessageType_kMessageTypeVolumeUp   MessageType = 32
	MessageType_kMessageTypeReplace    MessageType = 33
	MessageType_kMessageTypeLogout     MessageType = 34
	MessageType_kMessageTypeAction     MessageType = 35
)

var MessageType_name = map[int32]string{
	1:  "kMessageTypeHello",
	2:  "kMessageTypeGoodbye",
	3:  "kMessageTypeProbe",
	10: "kMessageTypeNotify",
	20: "kMessageTypeLoad",
	21: "kMessageTypePlay",
	22: "kMessageTypePause",
	23: "kMessageTypePlayPause",
	24: "kMessageTypeSeek",
	25: "kMessageTypePrev",
	26: "kMessageTypeNext",
	27: "kMessageTypeVolume",
	28: "kMessageTypeShuffle",
	29: "kMessageTypeRepeat",
	31: "kMessageTypeVolumeDown",
	32: "kMessageTypeVolumeUp",
	33: "kMessageTypeReplace",
	34: "kMessageTypeLogout",
	35: "kMessageTypeAction",
}
var MessageType_value = map[string]int32{
	"kMessageTypeHello":      1,
	"kMessageTypeGoodbye":    2,
	"kMessageTypeProbe":      3,
	"kMessageTypeNotify":     10,
	"kMessageTypeLoad":       20,
	"kMessageTypePlay":       21,
	"kMessageTypePause":      22,
	"kMessageTypePlayPause":  23,
	"kMessageTypeSeek":       24,
	"kMessageTypePrev":       25,
	"kMessageTypeNext":       26,
	"kMessageTypeVolume":     27,
	"kMessageTypeShuffle":    28,
	"kMessageTypeRepeat":     29,
	"kMessageTypeVolumeDown": 31,
	"kMessageTypeVolumeUp":   32,
	"kMessageTypeReplace":    33,
	"kMessageTypeLogout":     34,
	"kMessageTypeAction":     35,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

type CapabilityType int32

const (
	CapabilityType_kSupportedContexts CapabilityType = 1
	CapabilityType_kCanBePlayer       CapabilityType = 2
	CapabilityType_kRestrictToLocal   CapabilityType = 3
	CapabilityType_kDeviceType        CapabilityType = 4
	CapabilityType_kGaiaEqConnectId   CapabilityType = 5
	CapabilityType_kSupportsLogout    CapabilityType = 6
	CapabilityType_kIsObservable      CapabilityType = 7
	CapabilityType_kVolumeSteps       CapabilityType = 8
	CapabilityType_kSupportedTypes    CapabilityType = 9
)

var CapabilityType_name = map[int32]string{
	1: "kSupportedContexts",
	2: "kCanBePlayer",
	3: "kRestrictToLocal",
	4: "kDeviceType",
	5: "kGaiaEqConnectId",
	6: "kSupportsLogout",
	7: "kIsObservable",
	8: "kVolumeSteps",
	9: "kSupportedTypes",
}
var CapabilityType_value = map[string]int32{
	"kSupportedContexts": 1,
	"kCanBePlayer":       2,
	"kRestrictToLocal":   3,
	"kDeviceType":        4,
	"kGaiaEqConnectId":   5,
	"kSupportsLogout":    6,
	"kIsObservable":      7,
	"kVolumeSteps":       8,
	"kSupportedTypes":    9,
}

func (x CapabilityType) Enum() *CapabilityType {
	p := new(CapabilityType)
	*p = x
	return p
}
func (x CapabilityType) String() string {
	return proto.EnumName(CapabilityType_name, int32(x))
}
func (x *CapabilityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CapabilityType_value, data, "CapabilityType")
	if err != nil {
		return err
	}
	*x = CapabilityType(value)
	return nil
}
func (CapabilityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type PlayStatus int32

const (
	PlayStatus_kPlayStatusStop    PlayStatus = 0
	PlayStatus_kPlayStatusPlay    PlayStatus = 1
	PlayStatus_kPlayStatusPause   PlayStatus = 2
	PlayStatus_kPlayStatusLoading PlayStatus = 3
)

var PlayStatus_name = map[int32]string{
	0: "kPlayStatusStop",
	1: "kPlayStatusPlay",
	2: "kPlayStatusPause",
	3: "kPlayStatusLoading",
}
var PlayStatus_value = map[string]int32{
	"kPlayStatusStop":    0,
	"kPlayStatusPlay":    1,
	"kPlayStatusPause":   2,
	"kPlayStatusLoading": 3,
}

func (x PlayStatus) Enum() *PlayStatus {
	p := new(PlayStatus)
	*p = x
	return p
}
func (x PlayStatus) String() string {
	return proto.EnumName(PlayStatus_name, int32(x))
}
func (x *PlayStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayStatus_value, data, "PlayStatus")
	if err != nil {
		return err
	}
	*x = PlayStatus(value)
	return nil
}
func (PlayStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

type Frame struct {
	Version            *uint32      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Ident              *string      `protobuf:"bytes,2,opt,name=ident" json:"ident,omitempty"`
	ProtocolVersion    *string      `protobuf:"bytes,3,opt,name=protocol_version" json:"protocol_version,omitempty"`
	SeqNr              *uint32      `protobuf:"varint,4,opt,name=seq_nr" json:"seq_nr,omitempty"`
	Typ                *MessageType `protobuf:"varint,5,opt,name=typ,enum=Spotify.MessageType" json:"typ,omitempty"`
	DeviceState        *DeviceState `protobuf:"bytes,7,opt,name=device_state" json:"device_state,omitempty"`
	Goodbye            *Goodbye     `protobuf:"bytes,11,opt,name=goodbye" json:"goodbye,omitempty"`
	State              *State       `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Position           *uint32      `protobuf:"varint,13,opt,name=position" json:"position,omitempty"`
	Volume             *uint32      `protobuf:"varint,14,opt,name=volume" json:"volume,omitempty"`
	StateUpdateId      *int64       `protobuf:"varint,17,opt,name=state_update_id" json:"state_update_id,omitempty"`
	Recipient          []string     `protobuf:"bytes,18,rep,name=recipient" json:"recipient,omitempty"`
	ContextPlayerState []byte       `protobuf:"bytes,19,opt,name=context_player_state" json:"context_player_state,omitempty"`
	XXX_unrecognized   []byte       `json:"-"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Frame) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *Frame) GetIdent() string {
	if m != nil && m.Ident != nil {
		return *m.Ident
	}
	return ""
}

func (m *Frame) GetProtocolVersion() string {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return ""
}

func (m *Frame) GetSeqNr() uint32 {
	if m != nil && m.SeqNr != nil {
		return *m.SeqNr
	}
	return 0
}

func (m *Frame) GetTyp() MessageType {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return MessageType_kMessageTypeHello
}

func (m *Frame) GetDeviceState() *DeviceState {
	if m != nil {
		return m.DeviceState
	}
	return nil
}

func (m *Frame) GetGoodbye() *Goodbye {
	if m != nil {
		return m.Goodbye
	}
	return nil
}

func (m *Frame) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Frame) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *Frame) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *Frame) GetStateUpdateId() int64 {
	if m != nil && m.StateUpdateId != nil {
		return *m.StateUpdateId
	}
	return 0
}

func (m *Frame) GetRecipient() []string {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Frame) GetContextPlayerState() []byte {
	if m != nil {
		return m.ContextPlayerState
	}
	return nil
}

type DeviceState struct {
	SwVersion        *string       `protobuf:"bytes,1,opt,name=sw_version" json:"sw_version,omitempty"`
	IsActive         *bool         `protobuf:"varint,10,opt,name=is_active" json:"is_active,omitempty"`
	CanPlay          *bool         `protobuf:"varint,11,opt,name=can_play" json:"can_play,omitempty"`
	Volume           *uint32       `protobuf:"varint,12,opt,name=volume" json:"volume,omitempty"`
	Name             *string       `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	ErrorCode        *uint32       `protobuf:"varint,14,opt,name=error_code" json:"error_code,omitempty"`
	BecameActiveAt   *int64        `protobuf:"varint,15,opt,name=became_active_at" json:"became_active_at,omitempty"`
	ErrorMessage     *string       `protobuf:"bytes,16,opt,name=error_message" json:"error_message,omitempty"`
	Capabilities     []*Capability `protobuf:"bytes,17,rep,name=capabilities" json:"capabilities,omitempty"`
	LocalUris        []string      `protobuf:"bytes,18,rep,name=local_uris" json:"local_uris,omitempty"`
	EncKey           []int32       `protobuf:"varint,19,rep,name=enc_key" json:"enc_key,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DeviceState) Reset()                    { *m = DeviceState{} }
func (m *DeviceState) String() string            { return proto.CompactTextString(m) }
func (*DeviceState) ProtoMessage()               {}
func (*DeviceState) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *DeviceState) GetSwVersion() string {
	if m != nil && m.SwVersion != nil {
		return *m.SwVersion
	}
	return ""
}

func (m *DeviceState) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

func (m *DeviceState) GetCanPlay() bool {
	if m != nil && m.CanPlay != nil {
		return *m.CanPlay
	}
	return false
}

func (m *DeviceState) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *DeviceState) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeviceState) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *DeviceState) GetBecameActiveAt() int64 {
	if m != nil && m.BecameActiveAt != nil {
		return *m.BecameActiveAt
	}
	return 0
}

func (m *DeviceState) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *DeviceState) GetCapabilities() []*Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *DeviceState) GetLocalUris() []string {
	if m != nil {
		return m.LocalUris
	}
	return nil
}

func (m *DeviceState) GetEncKey() []int32 {
	if m != nil {
		return m.EncKey
	}
	return nil
}

type Capability struct {
	Typ              *CapabilityType `protobuf:"varint,1,opt,name=typ,enum=Spotify.CapabilityType" json:"typ,omitempty"`
	IntValue         []int64         `protobuf:"varint,2,rep,name=intValue" json:"intValue,omitempty"`
	StringValue      []string        `protobuf:"bytes,3,rep,name=stringValue" json:"stringValue,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Capability) Reset()                    { *m = Capability{} }
func (m *Capability) String() string            { return proto.CompactTextString(m) }
func (*Capability) ProtoMessage()               {}
func (*Capability) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *Capability) GetTyp() CapabilityType {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return CapabilityType_kSupportedContexts
}

func (m *Capability) GetIntValue() []int64 {
	if m != nil {
		return m.IntValue
	}
	return nil
}

func (m *Capability) GetStringValue() []string {
	if m != nil {
		return m.StringValue
	}
	return nil
}

type Goodbye struct {
	Reason           *string `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Goodbye) Reset()                    { *m = Goodbye{} }
func (m *Goodbye) String() string            { return proto.CompactTextString(m) }
func (*Goodbye) ProtoMessage()               {}
func (*Goodbye) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *Goodbye) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

type State struct {
	ContextUri          *string     `protobuf:"bytes,2,opt,name=context_uri" json:"context_uri,omitempty"`
	Index               *uint32     `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	PositionMs          *uint32     `protobuf:"varint,4,opt,name=position_ms" json:"position_ms,omitempty"`
	Status              *PlayStatus `protobuf:"varint,5,opt,name=status,enum=Spotify.PlayStatus" json:"status,omitempty"`
	PositionMeasuredAt  *uint64     `protobuf:"varint,7,opt,name=position_measured_at" json:"position_measured_at,omitempty"`
	ContextDescription  *string     `protobuf:"bytes,8,opt,name=context_description" json:"context_description,omitempty"`
	Shuffle             *bool       `protobuf:"varint,13,opt,name=shuffle" json:"shuffle,omitempty"`
	Repeat              *bool       `protobuf:"varint,14,opt,name=repeat" json:"repeat,omitempty"`
	LastCommandIdent    *string     `protobuf:"bytes,20,opt,name=last_command_ident" json:"last_command_ident,omitempty"`
	LastCommandMsgid    *uint32     `protobuf:"varint,21,opt,name=last_command_msgid" json:"last_command_msgid,omitempty"`
	PlayingFromFallback *bool       `protobuf:"varint,24,opt,name=playing_from_fallback" json:"playing_from_fallback,omitempty"`
	Row                 *uint32     `protobuf:"varint,25,opt,name=row" json:"row,omitempty"`
	PlayingTrackIndex   *uint32     `protobuf:"varint,26,opt,name=playing_track_index" json:"playing_track_index,omitempty"`
	Track               []*TrackRef `protobuf:"bytes,27,rep,name=track" json:"track,omitempty"`
	Ad                  *Ad         `protobuf:"bytes,28,opt,name=ad" json:"ad,omitempty"`
	XXX_unrecognized    []byte      `json:"-"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *State) GetContextUri() string {
	if m != nil && m.ContextUri != nil {
		return *m.ContextUri
	}
	return ""
}

func (m *State) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *State) GetPositionMs() uint32 {
	if m != nil && m.PositionMs != nil {
		return *m.PositionMs
	}
	return 0
}

func (m *State) GetStatus() PlayStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return PlayStatus_kPlayStatusStop
}

func (m *State) GetPositionMeasuredAt() uint64 {
	if m != nil && m.PositionMeasuredAt != nil {
		return *m.PositionMeasuredAt
	}
	return 0
}

func (m *State) GetContextDescription() string {
	if m != nil && m.ContextDescription != nil {
		return *m.ContextDescription
	}
	return ""
}

func (m *State) GetShuffle() bool {
	if m != nil && m.Shuffle != nil {
		return *m.Shuffle
	}
	return false
}

func (m *State) GetRepeat() bool {
	if m != nil && m.Repeat != nil {
		return *m.Repeat
	}
	return false
}

func (m *State) GetLastCommandIdent() string {
	if m != nil && m.LastCommandIdent != nil {
		return *m.LastCommandIdent
	}
	return ""
}

func (m *State) GetLastCommandMsgid() uint32 {
	if m != nil && m.LastCommandMsgid != nil {
		return *m.LastCommandMsgid
	}
	return 0
}

func (m *State) GetPlayingFromFallback() bool {
	if m != nil && m.PlayingFromFallback != nil {
		return *m.PlayingFromFallback
	}
	return false
}

func (m *State) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *State) GetPlayingTrackIndex() uint32 {
	if m != nil && m.PlayingTrackIndex != nil {
		return *m.PlayingTrackIndex
	}
	return 0
}

func (m *State) GetTrack() []*TrackRef {
	if m != nil {
		return m.Track
	}
	return nil
}

func (m *State) GetAd() *Ad {
	if m != nil {
		return m.Ad
	}
	return nil
}

type TrackRef struct {
	Gid              []byte  `protobuf:"bytes,1,opt,name=gid" json:"gid,omitempty"`
	Uri              *string `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	Queued           *bool   `protobuf:"varint,3,opt,name=queued" json:"queued,omitempty"`
	Context          *string `protobuf:"bytes,4,opt,name=context" json:"context,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TrackRef) Reset()                    { *m = TrackRef{} }
func (m *TrackRef) String() string            { return proto.CompactTextString(m) }
func (*TrackRef) ProtoMessage()               {}
func (*TrackRef) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *TrackRef) GetGid() []byte {
	if m != nil {
		return m.Gid
	}
	return nil
}

func (m *TrackRef) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *TrackRef) GetQueued() bool {
	if m != nil && m.Queued != nil {
		return *m.Queued
	}
	return false
}

func (m *TrackRef) GetContext() string {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return ""
}

type Ad struct {
	Next             *int32  `protobuf:"varint,1,opt,name=next" json:"next,omitempty"`
	OggFid           []byte  `protobuf:"bytes,2,opt,name=ogg_fid" json:"ogg_fid,omitempty"`
	ImageFid         []byte  `protobuf:"bytes,3,opt,name=image_fid" json:"image_fid,omitempty"`
	Duration         *int32  `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
	ClickUrl         *string `protobuf:"bytes,5,opt,name=click_url" json:"click_url,omitempty"`
	ImpressionUrl    *string `protobuf:"bytes,6,opt,name=impression_url" json:"impression_url,omitempty"`
	Product          *string `protobuf:"bytes,7,opt,name=product" json:"product,omitempty"`
	Advertiser       *string `protobuf:"bytes,8,opt,name=advertiser" json:"advertiser,omitempty"`
	Gid              []byte  `protobuf:"bytes,9,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ad) Reset()                    { *m = Ad{} }
func (m *Ad) String() string            { return proto.CompactTextString(m) }
func (*Ad) ProtoMessage()               {}
func (*Ad) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *Ad) GetNext() int32 {
	if m != nil && m.Next != nil {
		return *m.Next
	}
	return 0
}

func (m *Ad) GetOggFid() []byte {
	if m != nil {
		return m.OggFid
	}
	return nil
}

func (m *Ad) GetImageFid() []byte {
	if m != nil {
		return m.ImageFid
	}
	return nil
}

func (m *Ad) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *Ad) GetClickUrl() string {
	if m != nil && m.ClickUrl != nil {
		return *m.ClickUrl
	}
	return ""
}

func (m *Ad) GetImpressionUrl() string {
	if m != nil && m.ImpressionUrl != nil {
		return *m.ImpressionUrl
	}
	return ""
}

func (m *Ad) GetProduct() string {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ""
}

func (m *Ad) GetAdvertiser() string {
	if m != nil && m.Advertiser != nil {
		return *m.Advertiser
	}
	return ""
}

func (m *Ad) GetGid() []byte {
	if m != nil {
		return m.Gid
	}
	return nil
}

func init() {
	proto.RegisterType((*Frame)(nil), "Spotify.Frame")
	proto.RegisterType((*DeviceState)(nil), "Spotify.DeviceState")
	proto.RegisterType((*Capability)(nil), "Spotify.Capability")
	proto.RegisterType((*Goodbye)(nil), "Spotify.Goodbye")
	proto.RegisterType((*State)(nil), "Spotify.State")
	proto.RegisterType((*TrackRef)(nil), "Spotify.TrackRef")
	proto.RegisterType((*Ad)(nil), "Spotify.Ad")
	proto.RegisterEnum("Spotify.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("Spotify.CapabilityType", CapabilityType_name, CapabilityType_value)
	proto.RegisterEnum("Spotify.PlayStatus", PlayStatus_name, PlayStatus_value)
}

var fileDescriptor9 = []byte{
	// 1068 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x55, 0xcf, 0x72, 0xdb, 0xb6,
	0x13, 0xfe, 0x49, 0xb4, 0x22, 0x09, 0xfa, 0x63, 0x98, 0x96, 0x6c, 0xfa, 0xdf, 0xfc, 0x1c, 0xa5,
	0x87, 0xd4, 0x07, 0x1f, 0xfa, 0x06, 0xae, 0x93, 0xa6, 0x99, 0x71, 0xd3, 0x8c, 0xe5, 0x66, 0xa6,
	0x27, 0x0e, 0x44, 0xac, 0x54, 0x8e, 0x28, 0x82, 0x06, 0x40, 0x39, 0x7a, 0xa0, 0xbe, 0x4a, 0x8f,
	0x3d, 0xf5, 0x65, 0x7a, 0xe8, 0x4c, 0x17, 0x4b, 0x4a, 0xe6, 0xd0, 0x3d, 0x69, 0xb8, 0xd8, 0xfd,
	0x76, 0xf7, 0xfb, 0x3e, 0x40, 0xac, 0x67, 0xb2, 0x58, 0x47, 0xd7, 0x99, 0x56, 0x56, 0xf9, 0xed,
	0x69, 0xa6, 0x6c, 0x3c, 0xdf, 0x4c, 0xfe, 0x6c, 0xb2, 0xd6, 0x0f, 0x5a, 0xac, 0xc0, 0xdf, 0x67,
	0xed, 0x35, 0x68, 0x13, 0xab, 0x34, 0x68, 0x5c, 0x36, 0xde, 0x0e, 0xfc, 0x01, 0x6b, 0xc5, 0x12,
	0x52, 0x1b, 0x34, 0xf1, 0xb3, 0xeb, 0x07, 0x8c, 0x53, 0x6d, 0xa4, 0x92, 0x70, 0x9b, 0xe8, 0xd1,
	0xc9, 0x90, 0xbd, 0x32, 0xf0, 0x18, 0xa6, 0x3a, 0xd8, 0xa3, 0xc2, 0xd7, 0xcc, 0xb3, 0x9b, 0x2c,
	0x68, 0xe1, 0xc7, 0xf0, 0xbb, 0xd1, 0x75, 0xd9, 0xea, 0xfa, 0x27, 0x30, 0x46, 0x2c, 0xe0, 0x61,
	0x93, 0x81, 0x7f, 0xc5, 0xfa, 0x12, 0xd6, 0x71, 0x04, 0xa1, 0xb1, 0xc2, 0x42, 0xd0, 0xc6, 0xdc,
	0x5e, 0x25, 0xf7, 0x1d, 0x1d, 0x4e, 0xdd, 0x19, 0xc2, 0xb5, 0x17, 0x4a, 0xc9, 0xd9, 0x06, 0x82,
	0x1e, 0xa5, 0xf1, 0x5d, 0xda, 0x87, 0x22, 0xee, 0x5f, 0xb0, 0x56, 0x81, 0xd3, 0xa7, 0x84, 0xe1,
	0x2e, 0xa1, 0x40, 0xe0, 0xac, 0x93, 0x29, 0x13, 0x5b, 0x37, 0xf2, 0x80, 0x46, 0xc4, 0x91, 0xd7,
	0x2a, 0xc9, 0x57, 0x10, 0x0c, 0xe9, 0xfb, 0x98, 0xed, 0x13, 0x40, 0x98, 0x67, 0xd2, 0xfd, 0xc4,
	0x32, 0x38, 0xc0, 0x03, 0xcf, 0x3f, 0x60, 0x5d, 0x0d, 0x51, 0x9c, 0xc5, 0x8e, 0x08, 0xff, 0xd2,
	0xc3, 0x75, 0xcf, 0xd9, 0x28, 0x52, 0xa9, 0x85, 0xaf, 0x36, 0xcc, 0x12, 0xb1, 0x01, 0x5d, 0xee,
	0x70, 0x88, 0x05, 0xfd, 0xc9, 0xdf, 0x0d, 0xd6, 0xab, 0x4e, 0xef, 0x33, 0x66, 0x9e, 0xc2, 0x2a,
	0xb3, 0x5d, 0x07, 0x1a, 0x9b, 0x50, 0x44, 0x36, 0x5e, 0x43, 0xc0, 0x30, 0xd4, 0x71, 0x23, 0x46,
	0x22, 0x25, 0x40, 0xda, 0xb2, 0x53, 0x19, 0xb1, 0x4f, 0x23, 0xf6, 0xd9, 0x5e, 0x8a, 0x3a, 0xd1,
	0x02, 0x5d, 0x07, 0x0b, 0x5a, 0x2b, 0x1d, 0x46, 0x4a, 0x6e, 0x97, 0x40, 0x85, 0x66, 0x10, 0x61,
	0x4e, 0x09, 0x1d, 0x0a, 0x1b, 0xec, 0xd3, 0x16, 0x63, 0x36, 0x28, 0xb2, 0x57, 0x85, 0x06, 0x01,
	0x27, 0x90, 0x6f, 0x59, 0x3f, 0x12, 0x99, 0x98, 0xc5, 0x09, 0x72, 0x03, 0x06, 0x57, 0xf6, 0x90,
	0xbd, 0xc3, 0x1d, 0x7b, 0xb7, 0xdb, 0xc3, 0x8d, 0xeb, 0x97, 0xa8, 0x48, 0x24, 0x61, 0xae, 0x63,
	0x53, 0x12, 0x81, 0x8e, 0x81, 0x34, 0x0a, 0x97, 0xb0, 0xc1, 0xdd, 0xbd, 0xb7, 0xad, 0xc9, 0xaf,
	0x8c, 0x55, 0x4a, 0xbe, 0x29, 0x6c, 0xd0, 0x20, 0x1b, 0x1c, 0xff, 0x07, 0x28, 0x39, 0x01, 0x17,
	0x8f, 0x53, 0xfb, 0x45, 0x24, 0x39, 0xa0, 0xd1, 0x3c, 0x1c, 0xf6, 0x10, 0xad, 0x6a, 0x75, 0x9c,
	0x2e, 0x8a, 0xa0, 0xe7, 0x7a, 0x4d, 0x4e, 0x58, 0x7b, 0x2b, 0x36, 0x12, 0xa3, 0x41, 0x98, 0x2d,
	0x9b, 0x93, 0x7f, 0xd0, 0xc2, 0x05, 0xd7, 0x58, 0xb9, 0x55, 0x06, 0xc7, 0x2c, 0x7d, 0xeb, 0x6c,
	0x9c, 0x4a, 0xf8, 0x4a, 0x66, 0x1d, 0xb8, 0x9c, 0xad, 0x17, 0xc2, 0x95, 0x29, 0x1d, 0xfb, 0x06,
	0x1d, 0x8c, 0x08, 0xb9, 0x29, 0x4d, 0xfb, 0x4c, 0xc1, 0x67, 0x14, 0x64, 0x4a, 0x47, 0x4e, 0xf7,
	0xe7, 0x4a, 0x1c, 0x20, 0xd7, 0x20, 0x1d, 0xc5, 0xce, 0xbb, 0x7b, 0xfe, 0x19, 0x3b, 0xdc, 0xf6,
	0x96, 0x60, 0x22, 0x1d, 0x67, 0x64, 0xb7, 0x0e, 0xcd, 0x80, 0x4c, 0x99, 0xdf, 0xf2, 0xf9, 0x3c,
	0x29, 0xe4, 0xeb, 0x14, 0x3b, 0x64, 0x80, 0xd5, 0x43, 0xfa, 0x3e, 0x65, 0x7e, 0x22, 0x8c, 0x45,
	0x35, 0x57, 0x2b, 0x91, 0xca, 0xb0, 0xb8, 0x78, 0x23, 0x2a, 0xae, 0x9f, 0xad, 0xcc, 0x02, 0xed,
	0x39, 0xa6, 0xc1, 0x2f, 0xd8, 0xd8, 0x59, 0x06, 0xc9, 0x0a, 0xe7, 0x5a, 0xad, 0xc2, 0xb9, 0x48,
	0x92, 0x99, 0x88, 0x96, 0x41, 0x40, 0xb0, 0x3d, 0xe6, 0x69, 0xf5, 0x14, 0x9c, 0x50, 0x2e, 0x4e,
	0xb8, 0xcd, 0xb5, 0x1a, 0x73, 0xc2, 0x82, 0x96, 0x53, 0x3a, 0xbc, 0x64, 0x2d, 0x0a, 0x06, 0x67,
	0xe4, 0x81, 0x83, 0x1d, 0x01, 0x0f, 0x2e, 0x7a, 0x0f, 0x73, 0xbc, 0x22, 0x4d, 0x21, 0x83, 0x73,
	0xba, 0x60, 0xbd, 0xdd, 0xf1, 0x8d, 0x9c, 0xbc, 0x67, 0x9d, 0x5d, 0x12, 0x36, 0x74, 0xc3, 0x39,
	0x61, 0xfa, 0xee, 0xe3, 0x59, 0x06, 0xdc, 0xf8, 0x31, 0x87, 0x1c, 0x24, 0xe9, 0xd0, 0x71, 0x94,
	0x94, 0x7c, 0x91, 0x06, 0xdd, 0xc9, 0xef, 0x0d, 0xd6, 0xbc, 0x91, 0x64, 0x73, 0x17, 0x74, 0x10,
	0x2d, 0x97, 0xa5, 0x16, 0xb8, 0x1b, 0x62, 0x36, 0x09, 0xd3, 0x5d, 0x9d, 0x15, 0x3a, 0x98, 0x42,
	0x1e, 0x85, 0xd0, 0x41, 0x32, 0xd7, 0x82, 0xe8, 0xde, 0xa3, 0x2a, 0x4c, 0x8a, 0x92, 0x18, 0x37,
	0xcc, 0x75, 0x42, 0x8a, 0x76, 0xfd, 0x23, 0x36, 0x8c, 0x57, 0x99, 0x46, 0xfb, 0x3b, 0xf9, 0x5c,
	0xfc, 0xd5, 0x56, 0x19, 0x7c, 0xd5, 0x64, 0x1e, 0x15, 0x3a, 0xd2, 0xc5, 0x12, 0x12, 0xaf, 0xab,
	0x8d, 0x0d, 0xe8, 0x52, 0xbe, 0x72, 0xab, 0xae, 0x6b, 0x77, 0xf5, 0x97, 0xc7, 0x7a, 0xd5, 0xa7,
	0x6c, 0xcc, 0x0e, 0x96, 0x95, 0xef, 0x1f, 0x21, 0x49, 0x14, 0x6f, 0x20, 0x5d, 0x87, 0xd5, 0x70,
	0x69, 0x5e, 0xde, 0xac, 0xe7, 0x7f, 0xd6, 0x6a, 0x06, 0xdc, 0xc3, 0x01, 0xfd, 0x6a, 0xf8, 0x13,
	0xd1, 0xcb, 0x99, 0x3f, 0x62, 0xbc, 0x1a, 0xbf, 0x53, 0x42, 0xf2, 0x51, 0x3d, 0xea, 0x5c, 0xca,
	0xc7, 0x2f, 0xa0, 0x45, 0x6e, 0x80, 0x1f, 0xf9, 0x27, 0x6c, 0x5c, 0x4f, 0x2e, 0x8e, 0x8e, 0xeb,
	0x38, 0x53, 0x80, 0x25, 0x0f, 0x5e, 0xa0, 0x6b, 0x58, 0xf3, 0x93, 0x7a, 0xf4, 0x13, 0xaa, 0xc4,
	0x4f, 0xeb, 0x73, 0x7f, 0xa1, 0x27, 0x8b, 0x9f, 0xd5, 0xf7, 0x9f, 0x16, 0xf6, 0xe7, 0xe7, 0xf5,
	0x82, 0x7b, 0xba, 0x06, 0xfc, 0x02, 0x6d, 0x7e, 0xf4, 0x12, 0xe8, 0x9d, 0x7a, 0x4a, 0xf9, 0xff,
	0xf1, 0x65, 0x1b, 0xbd, 0x3c, 0xfb, 0x25, 0xe3, 0x97, 0xf5, 0x36, 0x88, 0x96, 0x88, 0x08, 0xf8,
	0xeb, 0x7a, 0x9b, 0x3b, 0xb5, 0x50, 0xb9, 0xe5, 0x93, 0x7a, 0xfc, 0x26, 0x72, 0xbe, 0xe1, 0x6f,
	0xae, 0xfe, 0x68, 0xb0, 0x61, 0xed, 0x69, 0x72, 0xa9, 0xd3, 0x3c, 0xcb, 0x94, 0xb6, 0x20, 0x6f,
	0x0b, 0xb3, 0x1a, 0x94, 0x96, 0xb3, 0xfe, 0xf2, 0x56, 0xa4, 0xdf, 0x13, 0x93, 0xa0, 0x51, 0x53,
	0x47, 0xcd, 0x3d, 0xb8, 0x57, 0x2b, 0xb2, 0x0f, 0xea, 0xce, 0x3d, 0x94, 0x28, 0xe9, 0x3e, 0xeb,
	0x2d, 0x8b, 0xbf, 0x02, 0x07, 0xc7, 0xf7, 0x28, 0xed, 0x83, 0x88, 0xc5, 0xfb, 0x47, 0x44, 0x4b,
	0x21, 0xb2, 0x1f, 0x25, 0x6f, 0xe1, 0x8b, 0xb4, 0xbf, 0x6d, 0x63, 0xca, 0x31, 0x5f, 0xa1, 0x85,
	0x07, 0xcb, 0x8f, 0xe6, 0xe7, 0x19, 0x9a, 0x70, 0x2d, 0x66, 0x48, 0x5c, 0x9b, 0xda, 0x16, 0x9b,
	0x4f, 0x2d, 0x64, 0x86, 0x77, 0xaa, 0x95, 0x20, 0x5d, 0x0f, 0xc3, 0xbb, 0x57, 0x92, 0xb1, 0xca,
	0xa3, 0xe5, 0x52, 0x9e, 0x3f, 0xa7, 0x56, 0x65, 0xfc, 0x7f, 0xb5, 0x20, 0x99, 0xa7, 0x41, 0xc3,
	0x55, 0x82, 0x64, 0x90, 0x26, 0x71, 0xf0, 0x1c, 0x75, 0xee, 0xc3, 0xf7, 0x83, 0x7b, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x2f, 0xe6, 0xb1, 0x01, 0x4e, 0x08, 0x00, 0x00,
}
